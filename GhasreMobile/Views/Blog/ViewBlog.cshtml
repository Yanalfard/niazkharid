@model TblBlog
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<int> idsAdd = (List<int>)ViewData["ListIdAd"];
    List<int> idsBlog = (List<int>)ViewData["ListIdBlog"];
    Random random = new Random();

    int getNext()
    {
        if (idsAdd.Count > 0)
        {
            int randomIndex = random.Next(0, idsAdd.Count - 1);
            int id = idsAdd[randomIndex];
            idsAdd.Remove(id);
            return id;
        }
        return -1;
    }
    int getNextBlog()
    {
        if (idsBlog.Count > 0)
        {
            int randomIndex = random.Next(0, idsBlog.Count - 1);
            int id = idsBlog[randomIndex];
            idsBlog.Remove(id);
            return id;
        }
        return -1;
    }
}

@section Styles{

    <link href="~/css/pages/blog.min.css" rel="stylesheet" />

}

@section Aside{

    @await Component.InvokeAsync("BlogSingleView", new { number = getNextBlog() })

    @await Component.InvokeAsync("AdView", new { number = getNext() })
    @await Component.InvokeAsync("AdView", new { number = getNext() })

    @await Component.InvokeAsync("BlogSingleView", new { number = getNextBlog() })

}

<nav class="breadcrumb uk-padding-remove">
    <a href="/Blog">اخبار</a>
    <a href="#" class="active">@Model.Title</a>
</nav>

<div class="mat-card">
    <h3>@Model.Title</h3>
    <img style="display:block;margin:0 auto;" src="~/Images/Blogs/thumb/@Model.MainImage" alt="" />

    <p>
        @Model.Description
    </p>
    <p>
        @Html.Raw(Model.BodyHtml)
    </p>
</div>

@await Component.InvokeAsync("SendCommentBlogView", Model.BlogId)

<div class="comment-section mat-card">
    <h3 class="uk-margin-bottom">نظرات کاربران</h3>
    <ul>
        @foreach (var item in Model.TblBlogCommentRel.Where(i => i.Comment.IsValid))
        {
            <li>
                <partial name="_RepliableComment" model="item.Comment" />
            </li>
        }
    </ul>
</div>


